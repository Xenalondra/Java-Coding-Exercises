/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package unscramblegame;

import java.awt.event.ActionEvent;
import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author Alondra Bio
 */
public class GameJFrame extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;

    int index;
    String scrambled;
    String correctWord;
    int score;
    int hp;
    int correctWords;
    int numPass;
    Timer timer;
    int counter;
    
    ArrayList<String> wordList = new ArrayList<>();
    
    /** Creates new form GameJFrame
     * @param wordList */
    public GameJFrame() {
        this.counter = 15;
        initComponents();
        initialize();
        startTimer();
    }
    
    private void initialize(){
        this.index = 0;
        this.score = 0;
        this.hp = 100;
        this.correctWords = 0;
        pblifeline.setValue(hp);
        readFile();
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtScrambled = new javax.swing.JTextField();
        txtGuess = new javax.swing.JTextField();
        lblScore = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblHint = new javax.swing.JLabel();
        btnEnter = new javax.swing.JButton();
        btnEnter1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        pblifeline = new javax.swing.JProgressBar();
        btnPassed = new javax.swing.JButton();
        lblTimer = new javax.swing.JLabel();
        lblTimer1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 0, 0)), "ANAGRAM GAME", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Bright", 1, 36))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Scrambled Word:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Your Guess:");

        txtScrambled.setEditable(false);
        txtScrambled.setBackground(new java.awt.Color(255, 204, 204));
        txtScrambled.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        txtGuess.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        lblScore.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setText("SCORE:");

        btnBack.setBackground(new java.awt.Color(255, 102, 102));
        btnBack.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back to Main Menu");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblHint.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N

        btnEnter.setBackground(new java.awt.Color(204, 255, 204));
        btnEnter.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnEnter.setText("SUBMIT");
        btnEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnterActionPerformed(evt);
            }
        });

        btnEnter1.setBackground(new java.awt.Color(255, 255, 204));
        btnEnter1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnEnter1.setText("HINT");
        btnEnter1.setToolTipText("Showing hint will deduct 5points to your score.");
        btnEnter1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnter1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel5.setText("LIFE:");

        pblifeline.setBackground(new java.awt.Color(153, 153, 153));
        pblifeline.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        pblifeline.setForeground(new java.awt.Color(255, 102, 102));
        pblifeline.setValue(100);

        btnPassed.setBackground(new java.awt.Color(204, 204, 255));
        btnPassed.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnPassed.setText("PASS");
        btnPassed.setToolTipText("You can only pass on 3 words. Next pass will deduct 5 points to your score.");
        btnPassed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPassedActionPerformed(evt);
            }
        });

        lblTimer.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTimer.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTimer.setText("30");

        lblTimer1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTimer1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTimer1.setText("Timer:");
        lblTimer1.setToolTipText("When timer reaches 0, Life will be deducted.");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtScrambled, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtGuess, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(97, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(pblifeline, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblScore, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lblHint, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(33, 33, 33))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnEnter1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPassed, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEnter)
                        .addGap(106, 106, 106))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblTimer1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTimer))
                            .addComponent(btnBack))
                        .addGap(23, 23, 23))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTimer, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimer1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblScore, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(pblifeline, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtScrambled)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGuess)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(lblHint, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(btnEnter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEnter1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPassed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addComponent(btnBack)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public final void readFile() {
        try (InputStream inputStream = getClass().getResourceAsStream("WORD_LIST.txt"); 
                InputStreamReader streamReader = new InputStreamReader(inputStream); 
                BufferedReader reader = new BufferedReader(streamReader)) {
            String line = reader.readLine();
            while (line != null) {
                wordList.add(line);
                line = reader.readLine();
            }

        } catch (Exception e) {
        }
    }
    
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        BackToMain();
    }//GEN-LAST:event_btnBackActionPerformed

    public void BackToMain() {
        MainJFrame game = new MainJFrame();
        game.setVisible(true);
        this.dispose();
    }
    
    private void btnEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnterActionPerformed
        if(correct(getGuess())){
            score+=10;
            correctWords++;
            wordList.remove(index);
        } else {
            hp -= 10;
            pblifeline.setValue(hp);
        }
         startGame();
    }//GEN-LAST:event_btnEnterActionPerformed

    private void btnEnter1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnter1ActionPerformed
        if (score != 0) {
            score -= 5;
            char firstLetter = correctWord.charAt(0);
            char lastLetter = correctWord.charAt(correctWord.length() - 1);
            lblHint.setText("Hint: The word starts with letter " + 
                    String.valueOf(firstLetter) +" and ends with "+
                    String.valueOf(lastLetter));
        }
    }//GEN-LAST:event_btnEnter1ActionPerformed

    private void btnPassedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPassedActionPerformed
        startGame();
        numPass++;
        if (numPass >= 3) {
            score-= 5;
        }
    }//GEN-LAST:event_btnPassedActionPerformed

    public String getGuess(){
        return txtGuess.getText();
    }
    
    public void setScrambled(String Text){
        txtScrambled.setText(Text);
    }
    
    public void setScore(int score){
        lblScore.setText(String.valueOf(score));
    }
    
    public void startGame(){
        if (!gameOver()) {
        clearFields();
        setScore(score);
        index = (int)(Math.random() * wordList.size());
        scrambled = splitLine(index).getScrambled();
        correctWord = splitLine(index).getWord();
        setScrambled(scrambled);
        restartTimer();
        } else {
            stopTimer();
            int tryAgain = JOptionPane.showConfirmDialog(
                    null, 
                    "Do you want to try again?", 
                    "PLAY AGAIN", 
                    JOptionPane.YES_NO_OPTION);
            if (tryAgain == 0) {
                initialize();
                restartTimer();
            } else {
                BackToMain();
            }
        }
        
    }
    
    public WordLibrary splitLine(int index){
            String[] parts = wordList.get(index).split(" ");
            String scram = parts[0];
            String Word = parts[1];
        return new WordLibrary(scram, Word);
    }

    private boolean correct(String guess) {
        return guess.equalsIgnoreCase(correctWord);
    }
    
    private void clearFields(){
         txtGuess.setText("");
         txtScrambled.setText("");
         lblHint.setText("");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameJFrame().setVisible(true);
            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnEnter;
    private javax.swing.JButton btnEnter1;
    private javax.swing.JButton btnPassed;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblHint;
    private javax.swing.JLabel lblScore;
    private javax.swing.JLabel lblTimer;
    private javax.swing.JLabel lblTimer1;
    private javax.swing.JProgressBar pblifeline;
    private javax.swing.JTextField txtGuess;
    private javax.swing.JTextField txtScrambled;
    // End of variables declaration//GEN-END:variables

    private boolean gameOver() {
        String result;
        if (wordList.isEmpty()) {
            result = "🎉 Congratulations! 🎉\n"+
                            "\nYou answered all the scrambled words." +
                            "\n📝 Total number of words: " + correctWords +
                            "\n🏆 Total Score: " + score;
            JOptionPane.showMessageDialog(null, result);
            return true;
        }
        else if (hp == 0 || score < 0) {
            if (score < 0) {
                score = 0;
            }
            result = "🚩 GAME OVER! 🚩\n"+
                            "\n📝 Total number of words: " + correctWords +
                            "\n🥇 Total Score: " + score;
            JOptionPane.showMessageDialog(null, result);
            return true;
        }
        return false;
    }
    
    public final void startTimer() {
        timer = new Timer(1000, (ActionEvent e) -> {
            counter--;
            if (counter == 0) {
                hp -= 5;
                startGame();
                restartTimer();
                pblifeline.setValue(hp);
            }
            lblTimer.setText(String.valueOf(counter));
        });
        timer.start();
    }
    
    public void restartTimer(){
        counter = 15;
        lblTimer.setText(String.valueOf(counter));
        timer.restart();
    }
    
    public void stopTimer(){
        counter = 0;
        lblTimer.setText(String.valueOf(counter));
        timer.stop();
    }
}
